package rules;
import ftn.bsep.siemcenter.model.Log;
global java.util.List logsOutput;


rule "LOG_ALWAYS-log"
    when
        $log: Log( getLevel() == 'LOG_ALWAYS' );
    then
    	logsOutput.add("Log_Always has occured. Time: " + $log.getTimestamp() + "| On machine: " + $log.getComputer_name() + "Message: " + $log.getMessage());
    	delete($log);
end 
 
rule "CRITICAL-log"
	when
	    $log: Log( getLevel() == 'CRITICAL' );
	then
		logsOutput.add("Critical log has occured. Time: " + $log.getTimestamp() + "| On machine: " + $log.getComputer_name() + "Message: " + $log.getMessage());
		delete($log);
end 
 

rule "ERROR-log"
	when
	    $log: Log( getLevel() == 'ERROR', $level: level );
	    Number(intValue >= 2) from accumulate(
        $log2: Log( this != $log, level == $level, this meets[15s] $log),count($log2))
	then
		logsOutput.add("Error has occured more than 2 times");
		//logsOutput.add("Error log has occured. Time: " + $log.getTimestamp() + "| On machine: " + $log.getComputer_name() + "Message: " + $log.getMessage);
		delete($log);
end 
 
rule "WARNING-log"
	when
	    $log: Log( getLevel() == 'WARNING' );
	then
		logsOutput.add("Warning log has occured. Time: " + $log.getTimestamp() + "| On machine: " + $log.getComputer_name() + "Message: " + $log.getMessage());
		delete($log);
end 
 
rule "INFORMATIONAL-log"
	when
	    $log: Log( getLevel() == 'INFORMATIONAL' );
	then
		logsOutput.add("Informational log has occured. Time: " + $log.getTimestamp() + "| On machine: " + $log.getComputer_name() + "Message: " + $log.getMessage());
		delete($log);
end
 
rule "VERBOSE-log"
	when
	    $log: Log( getLevel() == 'VERBOSE' );
	then
		logsOutput.add("Verbose log has occured. Time: " + $log.getTimestamp() + "| On machine: " + $log.getComputer_name() + "Message: " + $log.getMessage());
		delete($log);
end 
 

